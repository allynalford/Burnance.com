{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "NftImageLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-nftImage"
      }
    },
    "ViewNFTLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-viewNFT"
      }
    },
    "ViewNFTtxLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-viewNFTtx"
      }
    },
    "GetEthPriceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-getEthPrice"
      }
    },
    "GetTxFeeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-getTxFee"
      }
    },
    "AddToWaitlistLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-addToWaitlist"
      }
    },
    "QnUnderscorefetchNFTsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-qn_fetchNFTs"
      }
    },
    "LanguageExecuteLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-languageExecute"
      }
    },
    "WalletStartLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-walletStart"
      }
    },
    "WalletLoadLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-walletLoad"
      }
    },
    "WalletStopLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-walletStop"
      }
    },
    "WalletNotificationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/burnance-dev-walletNotification"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "burnance",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/burnance-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/burnance-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:DeleteObject",
                    "s3:*"
                  ],
                  "Resource": [
                    "arn:aws:s3:::dev.nft.burnance.io/*",
                    "arn:aws:s3:::dev.image.nft.burnance.io/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:DescribeTable",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-nfts-metadata",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-contract-abi",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-waitlist",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-wallet",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-wallet-nft",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-wallet-nft/index/*",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-wallet-nft-cache",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-wallet-nft-tx",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-nfts-image",
                    "arn:aws:dynamodb:us-east-1:*:table/burnance-dev-nft-collection"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "burnance",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "NftImageLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "actions.getNFTImage",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-nftImage",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "NftImageLogGroup"
      ]
    },
    "ViewNFTLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "actions.view",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-viewNFT",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ViewNFTLogGroup"
      ]
    },
    "ViewNFTtxLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "etherscan/handler.tokenNftTx",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-viewNFTtx",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ViewNFTtxLogGroup"
      ]
    },
    "GetEthPriceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "etherscan/handler.getEthPrice",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-getEthPrice",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetEthPriceLogGroup"
      ]
    },
    "GetTxFeeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "etherscan/handler.getTxTransactionFee",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-getTxFee",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetTxFeeLogGroup"
      ]
    },
    "AddToWaitlistLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "waitlist/handler.add",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-addToWaitlist",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AddToWaitlistLogGroup"
      ]
    },
    "QnUnderscorefetchNFTsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "quicknode/handler.qn_fetchNFTs",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-qn_fetchNFTs",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "QnUnderscorefetchNFTsLogGroup"
      ]
    },
    "LanguageExecuteLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "shopify/language/themelanguage.start",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-languageExecute",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn",
            "state_machine_arn": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LanguageExecuteLogGroup"
      ]
    },
    "WalletStartLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "wallet/steps.start",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-walletStart",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "WalletStartLogGroup"
      ]
    },
    "WalletLoadLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "wallet/steps.loadWalletData",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-walletLoad",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "WalletLoadLogGroup"
      ]
    },
    "WalletStopLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "wallet/steps.stop",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-walletStop",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "WalletStopLogGroup"
      ]
    },
    "WalletNotificationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "service.burnance.nodejs.lambdas.dev",
          "S3Key": "serverless/burnance/dev/1658559694357-2022-07-23T07:01:34.357Z/burnance.zip"
        },
        "Handler": "wallet/steps.notification",
        "Runtime": "nodejs12.x",
        "FunctionName": "burnance-dev-walletNotification",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "REGION": "us-east-1",
            "ACCOUNTID": "297677912558",
            "USER_AGENT": "dev.nft.burnance.io",
            "CDN_BUCKET": "dev.nft.burnance.io",
            "NFT_IMAGE_CDN_BUCKET": "dev.image.nft.burnance.io",
            "QUICK_NODE_HTTP": "https://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "QUICK_NODE_WSS": "wss://aged-wild-sun.discover.quiknode.pro/22d04687857eddacbc7d24f70b51106bcf679686/",
            "ETHERSCAN_API_URL": "https://api.etherscan.io/api",
            "API_KEY_TOKEN": "WWY6WGBKZCG5U8JEY2RNTXT1YWMMER6SPN",
            "PRO_API_KEY": "TFSZVPV8PUQ2HZWWJAI6TPSASX72HRYNWS",
            "ETHERSCAN_ABI_PARAMS": "module=contract&action=getabi",
            "OPEN": "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",
            "SLACK_API_WAITLIST_WEBHOOK": "https://hooks.slack.com/services/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",
            "DRIP": "d19af8d64382261d9cbd9762fdd07356",
            "DRIP_ID": "4947055",
            "S3_DRIP_CDN_BUCKET": "events.nft.burnance.io",
            "DYNAMODB_TABLE_CONTRACT_ABI": "burnance-dev-contract-abi",
            "DYNAMODB_TABLE_NFT_METADATA": "burnance-dev-nfts-metadata",
            "DYNAMODB_TABLE_NFT_IMAGE": "burnance-dev-nfts-image",
            "DYNAMODB_TABLE_WAITLIST": "burnance-dev-waitlist",
            "DYNAMODB_TABLE_WALLET": "burnance-dev-wallet",
            "DYNAMODB_TABLE_WALLET_NFT": "burnance-dev-wallet-nft",
            "DYNAMODB_TABLE_WALLET_NFT_CACHE": "burnance-dev-wallet-nft-cache",
            "DYNAMODB_TABLE_WALLET_NFT_TX": "burnance-dev-wallet-nft-tx",
            "DYNAMODB_TABLE_NFT_COLLECTION": "burnance-dev-nft-collection",
            "NODE": "wss://mainnet.infura.io/ws/v3/5d683ea6270a44d4996ad65529057982",
            "KEY": "adfb72ce9754e3cbc1e79e44a8e20804cebd3c4a347605c6a3462a8de05b8783",
            "STATE_MACHINE_WALLET_ARN": "arn:aws:states:us-east-1:297677912558:stateMachine:walletDetailsStateMachineArn"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "WalletNotificationLogGroup"
      ]
    },
    "NftImageLambdaVersionETkcLaqNrwVkBUcWouAiHKERIs3lthYR3wFjF4xj1s": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "NftImageLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "ViewNFTLambdaVersionlhoUy91lR84Mkzyh7BebwsMunqWgsnEF8yz4DyClIWA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ViewNFTLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "QnUnderscorefetchNFTsLambdaVersion8BM2dy4DCotZJp9RUmo2wP7FNLLB2PnoSbRzhwOGrA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "QnUnderscorefetchNFTsLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "AddToWaitlistLambdaVersionqbqO59yhZOav94z2irHSWJlDnGz3vQS7vcO3MWIMj4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddToWaitlistLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "GetEthPriceLambdaVersionOGZzgZpIURqWqsYkwg43F88tdwOB3XKfdMQxSqLc0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetEthPriceLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "WalletStartLambdaVersion6Lb77xW6WQ0HesDcDZ80NHK0CU9eg24jQAL9cIOgw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WalletStartLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "ViewNFTtxLambdaVersionZ46zWXCyjjx3wcKqW17ipC0F9xi7IPf4uW42ZSTkM8c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ViewNFTtxLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "GetTxFeeLambdaVersion74eQ7QXDsCsPE9YuNmXRxO102goaffxDCvmAO69JkU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetTxFeeLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "WalletLoadLambdaVersionvtoYurUq6JjEwXCvwZBQP0Y1Yw3tdopZ4beQVPsJDE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WalletLoadLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "LanguageExecuteLambdaVersionJlnHWEiErRLKQMHixPQaZE5vvEw3pFJVW4MNIsvJzI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LanguageExecuteLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "WalletStopLambdaVersionIkzPf8EmvKTT4Rk0I8N0LCIqED7qVJkstNX2QfumU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WalletStopLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "WalletNotificationLambdaVersionlRPlDcYWB5hUBcv1kGCUyuj1uytWLYX6guFT5udMCg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WalletNotificationLambdaFunction"
        },
        "CodeSha256": "IMB/9fORME0fxpk5q5OmIH5ZA1/m4yNYxF72fTd4KF4="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-burnance",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceNft": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "nft",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceNftImage": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceNft"
        },
        "PathPart": "image",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceView": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "view",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceViewNft": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceView"
        },
        "PathPart": "nft",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEtherscan": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "etherscan",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEtherscanTokennfttx": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceEtherscan"
        },
        "PathPart": "tokenNftTx",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEtherscanEthprice": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceEtherscan"
        },
        "PathPart": "ethprice",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEtherscanTx": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceEtherscan"
        },
        "PathPart": "tx",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceWaitlist": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "waitlist",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceWaitlistAdd": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceWaitlist"
        },
        "PathPart": "add",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceQuicknode": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "quicknode",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceQuicknodeQnfetchnfts": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceQuicknode"
        },
        "PathPart": "qn_fetchNFTs",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceShopify": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "shopify",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceShopifyWorkflow": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceShopify"
        },
        "PathPart": "workflow",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceShopifyWorkflowLanguage": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceShopifyWorkflow"
        },
        "PathPart": "language",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceShopifyWorkflowLanguageStart": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceShopifyWorkflowLanguage"
        },
        "PathPart": "start",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceWallet": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "wallet",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceWalletStep": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceWallet"
        },
        "PathPart": "step",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceWalletStepStart": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceWalletStep"
        },
        "PathPart": "start",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceWalletStepDetails": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceWalletStep"
        },
        "PathPart": "details",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceWalletStepDetailsLoad": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceWalletStepDetails"
        },
        "PathPart": "load",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodNftImageOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceNftImage"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodViewNftOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceViewNft"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodEtherscanTokennfttxOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceEtherscanTokennfttx"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodEtherscanEthpriceOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceEtherscanEthprice"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodEtherscanTxOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceEtherscanTx"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodWaitlistAddOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceWaitlistAdd"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodQuicknodeQnfetchnftsOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuicknodeQnfetchnfts"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodNftImagePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceNftImage"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "NftImageLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "NftImageLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodViewNftPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceViewNft"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ViewNFTLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ViewNFTLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodEtherscanTokennfttxPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceEtherscanTokennfttx"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ViewNFTtxLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ViewNFTtxLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodEtherscanEthpriceGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceEtherscanEthprice"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetEthPriceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetEthPriceLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodEtherscanTxGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceEtherscanTx"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetTxFeeLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetTxFeeLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodWaitlistAddPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceWaitlistAdd"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddToWaitlistLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddToWaitlistLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuicknodeQnfetchnftsPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuicknodeQnfetchnfts"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "QnUnderscorefetchNFTsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "QnUnderscorefetchNFTsLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodShopifyWorkflowLanguageStartPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceShopifyWorkflowLanguageStart"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LanguageExecuteLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "LanguageExecuteLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodWalletStepStartPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceWalletStepStart"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WalletStartLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "WalletStartLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodWalletStepDetailsLoadPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceWalletStepDetailsLoad"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WalletLoadLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "WalletLoadLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1658559650729": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodNftImageOptions",
        "ApiGatewayMethodViewNftOptions",
        "ApiGatewayMethodEtherscanTokennfttxOptions",
        "ApiGatewayMethodEtherscanEthpriceOptions",
        "ApiGatewayMethodEtherscanTxOptions",
        "ApiGatewayMethodWaitlistAddOptions",
        "ApiGatewayMethodQuicknodeQnfetchnftsOptions",
        "ApiGatewayMethodNftImagePost",
        "ApiGatewayMethodViewNftPost",
        "ApiGatewayMethodEtherscanTokennfttxPost",
        "ApiGatewayMethodEtherscanEthpriceGet",
        "ApiGatewayMethodEtherscanTxGet",
        "ApiGatewayMethodWaitlistAddPost",
        "ApiGatewayMethodQuicknodeQnfetchnftsPost",
        "ApiGatewayMethodShopifyWorkflowLanguageStartPost",
        "ApiGatewayMethodWalletStepStartPost",
        "ApiGatewayMethodWalletStepDetailsLoadPost"
      ]
    },
    "NftImageLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "NftImageLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ViewNFTLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ViewNFTLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ViewNFTtxLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ViewNFTtxLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetEthPriceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetEthPriceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetTxFeeLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetTxFeeLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddToWaitlistLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddToWaitlistLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "QnUnderscorefetchNFTsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "QnUnderscorefetchNFTsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "LanguageExecuteLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LanguageExecuteLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "WalletStartLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WalletStartLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "WalletLoadLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WalletLoadLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "WalletNFTDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "chain",
            "AttributeType": "S"
          },
          {
            "AttributeName": "contractAddressTokenId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "owner",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "chain",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "contractAddressTokenId",
            "KeyType": "RANGE"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "InstanceIdIndex",
            "KeySchema": [
              {
                "AttributeName": "owner",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "contractAddressTokenId",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "NonKeyAttributes": [
                "costETH",
                "costUSD",
                "valueUSD",
                "valueETH",
                "gasUSD",
                "gasETH",
                "gasData",
                "ethTransPriceUSD",
                "hash",
                "createdatetime",
                "timestamp",
                "status"
              ],
              "ProjectionType": "INCLUDE"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "burnance-dev-wallet-nft"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "service.burnance.nodejs.lambdas.dev",
      "Export": {
        "Name": "sls-burnance-dev-ServerlessDeploymentBucketName"
      }
    },
    "NftImageLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "NftImageLambdaVersionETkcLaqNrwVkBUcWouAiHKERIs3lthYR3wFjF4xj1s"
      },
      "Export": {
        "Name": "sls-burnance-dev-NftImageLambdaFunctionQualifiedArn"
      }
    },
    "ViewNFTLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ViewNFTLambdaVersionlhoUy91lR84Mkzyh7BebwsMunqWgsnEF8yz4DyClIWA"
      },
      "Export": {
        "Name": "sls-burnance-dev-ViewNFTLambdaFunctionQualifiedArn"
      }
    },
    "QnUnderscorefetchNFTsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "QnUnderscorefetchNFTsLambdaVersion8BM2dy4DCotZJp9RUmo2wP7FNLLB2PnoSbRzhwOGrA"
      },
      "Export": {
        "Name": "sls-burnance-dev-QnUnderscorefetchNFTsLambdaFunctionQualifiedArn"
      }
    },
    "AddToWaitlistLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddToWaitlistLambdaVersionqbqO59yhZOav94z2irHSWJlDnGz3vQS7vcO3MWIMj4"
      },
      "Export": {
        "Name": "sls-burnance-dev-AddToWaitlistLambdaFunctionQualifiedArn"
      }
    },
    "GetEthPriceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetEthPriceLambdaVersionOGZzgZpIURqWqsYkwg43F88tdwOB3XKfdMQxSqLc0"
      },
      "Export": {
        "Name": "sls-burnance-dev-GetEthPriceLambdaFunctionQualifiedArn"
      }
    },
    "WalletStartLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WalletStartLambdaVersion6Lb77xW6WQ0HesDcDZ80NHK0CU9eg24jQAL9cIOgw"
      },
      "Export": {
        "Name": "sls-burnance-dev-WalletStartLambdaFunctionQualifiedArn"
      }
    },
    "ViewNFTtxLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ViewNFTtxLambdaVersionZ46zWXCyjjx3wcKqW17ipC0F9xi7IPf4uW42ZSTkM8c"
      },
      "Export": {
        "Name": "sls-burnance-dev-ViewNFTtxLambdaFunctionQualifiedArn"
      }
    },
    "GetTxFeeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetTxFeeLambdaVersion74eQ7QXDsCsPE9YuNmXRxO102goaffxDCvmAO69JkU"
      },
      "Export": {
        "Name": "sls-burnance-dev-GetTxFeeLambdaFunctionQualifiedArn"
      }
    },
    "WalletLoadLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WalletLoadLambdaVersionvtoYurUq6JjEwXCvwZBQP0Y1Yw3tdopZ4beQVPsJDE"
      },
      "Export": {
        "Name": "sls-burnance-dev-WalletLoadLambdaFunctionQualifiedArn"
      }
    },
    "LanguageExecuteLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LanguageExecuteLambdaVersionJlnHWEiErRLKQMHixPQaZE5vvEw3pFJVW4MNIsvJzI"
      },
      "Export": {
        "Name": "sls-burnance-dev-LanguageExecuteLambdaFunctionQualifiedArn"
      }
    },
    "WalletStopLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WalletStopLambdaVersionIkzPf8EmvKTT4Rk0I8N0LCIqED7qVJkstNX2QfumU"
      },
      "Export": {
        "Name": "sls-burnance-dev-WalletStopLambdaFunctionQualifiedArn"
      }
    },
    "WalletNotificationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WalletNotificationLambdaVersionlRPlDcYWB5hUBcv1kGCUyuj1uytWLYX6guFT5udMCg"
      },
      "Export": {
        "Name": "sls-burnance-dev-WalletNotificationLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-burnance-dev-ServiceEndpoint"
      }
    }
  }
}